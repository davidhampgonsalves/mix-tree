(dp1
S'output'
p2
S''
sS'layer'
p3
S'/home/dave/web2py/applications/init/controllers/audio.py'
p4
sS'code'
p5
S"import gluon.contrib.simplejson as sj\n\nresultsPerPage = 10\n\ndef index(): \n    '''displays the search and results pertaining to audio'''\n    #check page number and the criteria\n    searchCriteria = None\n    audio = []\n    page = 0\n    if len(request.args) > 0:\n        searchCriteria = request.args[0]\n        if len(request.args) == 2:\n            page = int(request.args[1])\n    \n    #create search form\n    formSearch = FORM(INPUT(_name='search', \n            requires=[IS_NOT_EMPTY(error_message='you have to enter something to search for'),\n            IS_LENGTH(50, error_message='you can\\'t have such a long search term, limit is 50 characters')]),\n            INPUT(_type='submit'), _action=URL(request.application, 'audio', 'index'), _method='get')\n\n    #handle form submits, which are search queries\n    if formSearch.accepts(request.vars):\n        searchCriteria = formSearch.vars.search\n\n    #get approperate records\n    if searchCriteria != None :\n        if request.env.web2py_runtime_gae:\n            pass    \n        else: \n            audioByArtist = db.audio.search_field.like('%'+searchCriteria+'%')\n            audio = db(audioByArtist).select(limitby=(page*resultsPerPage, (page+1)*resultsPerPage + 1))\n\n    #create forward and back links\n    forward = ''\n    backward = ''\n\n    #not a perfect way to pagnate but its fast\n    if audio != None and len(audio) == resultsPerPage + 1 : \n        forward = A('>>', _href=URL(r=request, args=[searchCriteria, page+1]))\n\n    #display back nav if not on 1st pg\n    if page > 0:\n        backward = A('<<', _href=URL(r=request, args=[searchCriteria, page-1]))\n\n    return dict(form_search=formSearch, audio=audio, forward=forward, backward=backward)\n\ndef search():\n    '''returns the results in json to an audio search'''\n    page = 0\n    jsonResponse = {}\n    searchCriteria = None\n    \n    if len(request.args) > 0:\n        searchCriteria = request.args[0]\n        if len(request.args) == 2:\n            page = int(request.args[1])\n\n    #get approperate records\n    if searchCriteria:\n        audioByArtist = db.audio.artist.like('%'+searchCriteria+'%')\n        audio = db(audioByArtist).select(limitby=(page*resultsPerPage, (page+1)*resultsPerPage))\n        \n        jsonAudio = []\n        for a in audio:\n            jsonAudio.append( {'id':a.id, 'artist':a.artist_name, 'track':a.track_name} )\n        jsonResponse['audio'] = jsonAudio\n        jsonResponse['page'] = {'forward':'flag', 'back':'flag'}\n\n    return sj.dumps(jsonResponse)\n\nresponse._vars=response._caller(search)\n"
p6
sS'traceback'
p7
S'Traceback (most recent call last):\n  File "/home/dave/web2py/gluon/restricted.py", line 184, in restricted\n    exec ccode in environment\n  File "/home/dave/web2py/applications/init/controllers/audio.py", line 72, in <module>\n  File "/home/dave/web2py/gluon/globals.py", line 102, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/dave/web2py/applications/init/controllers/audio.py", line 66, in search\n    jsonAudio.append( {\'id\':a.id, \'artist\':a.artist_name, \'track\':a.track_name} )\n  File "/home/dave/web2py/gluon/sql.py", line 605, in __getattr__\n    return dict.__getitem__(self,key)\nKeyError: \'artist_name\'\n'
p8
s.