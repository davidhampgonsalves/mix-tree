(dp1
S'output'
p2
S''
sS'layer'
p3
S'/home/dave/web2py/applications/init/controllers/audio.py'
p4
sS'code'
p5
S"import gluon.contrib.simplejson as sj\n\nresults_per_page = 10\n\ndef search():\n    '''returns the results in json to an audio search'''\n    page = 0\n    json_response = {}\n    search_criteria = None\n    \n    if len(request.args) > 0:\n        search_criteria = request.args[0]\n        if len(request.args) == 2:\n            page = int(request.args[1])\n\n    #get approperate records\n    if search_criteria:\n        if request.env.web2py_runtime_gae:        \n            audio_by_artist = db.Audio.artist == search_criteria\n        else:\n            audio_by_artist = db.Audio.artist.like('%'+search_criteria+'%')\n            \n        audio = db(audio_by_artist).select(limitby=(page*results_per_page, (page+1) * (results_per_page+1)))\n        \n        json_audio = []\n        audio_result_len = len(audio)\n        #create a json representation of the audio results\n        for i in range(0, audio_result_len):\n            a = audio[i]\n            json_audio.append( {'id':a.id, 'artist':a.artist, 'track':a.track})\n\n        #create flags to determine if the forward and back links are applicable\n        if audio_result_len <= results_per_page:\n            forward = None;\n        else:\n            forward = page + 1\n        if page == 0:\n            back = None\n        else:\n            back = page - 1\n\n        json_response['audio'] = json_audio\n        json_response['pagnation'] = {'searchCriteria':search_criteria, 'forward':forward, 'back':back}\n\n    return sj.dumps(json_response)\n\nresponse._vars=response._caller(search)\n"
p6
sS'traceback'
p7
S'Traceback (most recent call last):\n  File "/home/dave/web2py/gluon/restricted.py", line 184, in restricted\n    exec ccode in environment\n  File "/home/dave/web2py/applications/init/controllers/audio.py", line 47, in <module>\n  File "/home/dave/web2py/gluon/globals.py", line 102, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/dave/web2py/applications/init/controllers/audio.py", line 23, in search\n    audio = db(audio_by_artist).select(limitby=(page*results_per_page, (page+1) * (results_per_page+1)))\n  File "/home/dave/web2py/gluon/sql.py", line 2739, in select\n    r = response(query)\n  File "/home/dave/web2py/gluon/sql.py", line 2734, in response\n    self._db._execute(query)\n  File "/home/dave/web2py/gluon/sql.py", line 805, in <lambda>\n    self._execute = lambda *a, **b: self._cursor.execute(*a, **b)\n  File "/usr/lib/pymodules/python2.6/MySQLdb/cursors.py", line 166, in execute\n    self.errorhandler(self, exc, value)\n  File "/usr/lib/pymodules/python2.6/MySQLdb/connections.py", line 35, in defaulterrorhandler\n    raise errorclass, errorvalue\nProgrammingError: (1146, "Table \'mixtree.Audio\' doesn\'t exist")\n'
p8
s.