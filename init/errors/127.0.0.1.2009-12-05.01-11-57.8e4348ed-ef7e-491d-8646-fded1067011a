(dp1
S'output'
p2
S''
sS'layer'
p3
S'/home/dave/web2py/applications/init/controllers/audio.py'
p4
sS'code'
p5
S"import gluon.contrib.simplejson as sj\n\nresults_per_page = 10\n\ndef index(): \n    '''displays the search and results pertaining to audio'''\n    #check page number and the criteria\n    searchCriteria = None\n    audio = []\n    page = 0\n    if len(request.args) > 0:\n        searchCriteria = request.args[0]\n        if len(request.args) == 2:\n            page = int(request.args[1])\n    \n    #create search form\n    formSearch = FORM(INPUT(_name='search', \n            requires=[IS_NOT_EMPTY(error_message='you have to enter something to search for'),\n            IS_LENGTH(50, error_message='you can\\'t have such a long search term, limit is 50 characters')]),\n            INPUT(_type='submit'), _action=URL(request.application, 'audio', 'index'), _method='get')\n\n    #handle form submits, which are search queries\n    if formSearch.accepts(request.vars):\n        searchCriteria = formSearch.vars.search\n\n    #get approperate records\n    if searchCriteria != None :\n        if request.env.web2py_runtime_gae:\n            pass    \n        else: \n            audioByArtist = db.audio.search_field.like('%'+searchCriteria+'%')\n            audio = db(audioByArtist).select(limitby=(page*results_per_page, (page+1)*resultsPerPage + 1))\n\n    #create forward and back links\n    forward = ''\n    backward = ''\n\n    #not a perfect way to pagnate but its fast\n    if audio != None and len(audio) == resultsPerPage + 1 : \n        forward = A('>>', _href=URL(r=request, args=[searchCriteria, page+1]))\n\n    #display back nav if not on 1st pg\n    if page > 0:\n        backward = A('<<', _href=URL(r=request, args=[searchCriteria, page-1]))\n\n    return dict(form_search=formSearch, audio=audio, forward=forward, backward=backward)\n\ndef search():\n    '''returns the results in json to an audio search'''\n    page = 0\n    json_response = {}\n    search_criteria = None\n    \n    if len(request.args) > 0:\n        search_criteria = request.args[0]\n        if len(request.args) == 2:\n            page = int(request.args[1])\n\n    #get approperate records\n    if searchCriteria:\n        audioByArtist = db.audio.artist.like('%'+search_criteria+'%')\n        audio = db(audioByArtist).select(limitby=(page*results_per_page, (page+1) * (resultsPerPage+1)))\n        \n        json_audio = []\n        audio_result_len = len(audio)\n        #create a json representation of the audio results\n        for i in range(0, audio_result_len):\n            a = audio[i]\n            json_audio.append( {'id':a.id, 'artist':a.artist, 'track':a.track})\n\n        #create flags to determine if the forward and back links are applicable\n        if audio_result_len <= results_per_page:\n            forward = -1;\n        else:\n            forward = page + 1\n        if page == 0:\n            back = -1\n        else:\n            back = page - 1\n\n        json_response['audio'] = jsonAudio\n        json_response['pagnation'] = {'searchCriteria':search_criteria, 'forward':forward, 'back':back}\n\n    return sj.dumps(jsonResponse)\n\nresponse._vars=response._caller(search)\n"
p6
sS'traceback'
p7
S'Traceback (most recent call last):\n  File "/home/dave/web2py/gluon/restricted.py", line 184, in restricted\n    exec ccode in environment\n  File "/home/dave/web2py/applications/init/controllers/audio.py", line 86, in <module>\n  File "/home/dave/web2py/gluon/globals.py", line 102, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/dave/web2py/applications/init/controllers/audio.py", line 60, in search\n    if searchCriteria:\nNameError: global name \'searchCriteria\' is not defined\n'
p8
s.